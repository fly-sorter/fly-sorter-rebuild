{"ast":null,"code":"import _objectSpread from \"/Users/timothyli/CodeFellows/401/fly-sorter-rebuild/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//This is the only starting form of the reducer, feel free to modularize this file\nvar initialState = {\n  parts: [],\n  subAssembly: [],\n  users: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n  console.log(payload, 'in the reducer');\n\n  switch (type) {\n    case 'GETPARTS':\n      return _objectSpread({}, state, {\n        parts: payload\n      });\n\n    case 'GETSUBASSEMBLY':\n      return _objectSpread({}, state, {\n        subAssembly: payload\n      });\n\n    case 'GETUSERLIST':\n      return _objectSpread({}, state, {\n        users: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/timothyli/CodeFellows/401/fly-sorter-rebuild/src/redux/reducer/reducer.js"],"names":["initialState","parts","subAssembly","users","state","action","type","payload","console","log"],"mappings":";AAAA;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACzCC,IADyC,GACvBD,MADuB,CACzCC,IADyC;AAAA,MACnCC,OADmC,GACvBF,MADuB,CACnCE,OADmC;AAG/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,gBAArB;;AAEA,UAAQD,IAAR;AACE,SAAK,UAAL;AACE,+BAAYF,KAAZ,EAAsB;AAAEH,QAAAA,KAAK,EAAEM;AAAT,OAAtB;;AAEF,SAAK,gBAAL;AACE,+BAAYH,KAAZ,EAAsB;AAAEF,QAAAA,WAAW,EAAEK;AAAf,OAAtB;;AAEF,SAAK,aAAL;AACE,+BAAYH,KAAZ,EAAsB;AAAED,QAAAA,KAAK,EAAEI;AAAT,OAAtB;;AAEF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAlBD","sourcesContent":["//This is the only starting form of the reducer, feel free to modularize this file\n\nconst initialState = {\n  parts: [],\n  subAssembly: [],\n  users: []\n};\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n\n  console.log(payload, 'in the reducer');\n\n  switch (type) {\n    case 'GETPARTS':\n      return { ...state, ...{ parts: payload } };\n\n    case 'GETSUBASSEMBLY':\n      return { ...state, ...{ subAssembly: payload } };\n\n    case 'GETUSERLIST':\n      return { ...state, ...{ users: payload } };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}